// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Test.Shop.Infrastructure.DAL;

#nullable disable

namespace Test.Shop.Infrastructure.Migrations
{
    [DbContext(typeof(ShopDbContext))]
    partial class ShopDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Test.Shop.Core.Entities.ShopCategory", b =>
                {
                    b.Property<int>("IdShopCategory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdShopCategory"));

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdShopCategory");

                    b.ToTable("ShopCategory", (string)null);

                    b.HasData(
                        new
                        {
                            IdShopCategory = 1,
                            IsActive = false,
                            Name = "Testowy sklep nr 1"
                        },
                        new
                        {
                            IdShopCategory = 2,
                            IsActive = false,
                            Name = "Testowy sklep nr 2"
                        },
                        new
                        {
                            IdShopCategory = 3,
                            IsActive = false,
                            Name = "Testowy sklep nr 3"
                        },
                        new
                        {
                            IdShopCategory = 4,
                            IsActive = false,
                            Name = "Testowy sklep nr 4"
                        });
                });

            modelBuilder.Entity("Test.Shop.Core.Entities.ShopDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValue(new DateTime(2025, 5, 24, 20, 19, 27, 277, DateTimeKind.Local).AddTicks(753));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("ShopDetails", (string)null);
                });

            modelBuilder.Entity("Test.Shop.Core.Entities.ShopDetails", b =>
                {
                    b.HasOne("Test.Shop.Core.Entities.ShopCategory", "ShopCategory")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShopCategory");
                });
#pragma warning restore 612, 618
        }
    }
}
